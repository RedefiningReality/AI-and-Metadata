import argparse, sys

parser = argparse.ArgumentParser(description="""This is a plotter for the csv file optionally generated by the AI.
											It can be used to plot both accuracy and loss graphs.""")
parser.add_argument("path", help="Path to the csv file (ex. C:/Users/johnt/Documents/history.csv")
parser.add_argument("to_plot", choices=["accuracy", "loss"], help="What to plot (choices are accuracy or loss)")
parser.add_argument("-t", "--title", default="AI Training Results", help="Title of plot (default is %(default)s)")
parser.add_argument("-c", "--datapoint-counter", type=int, default=1, help="Determines how many datapoints are included in the final graph, with 1 being all of them and greater numbers corresponding to fewer datapoints")
args = parser.parse_args(sys.argv[1:])

import matplotlib.pyplot as plt
import csv

labels = None
x = []
y1 = []
y2 = []

y1_index = 1
y2_index = 3

if args.to_plot == "loss":
	y1_index = 2
	y2_index = 4

sum1 = 0.0
sum2 = 0.0
with open(args.path,'r') as csvfile:
	plots = csv.reader(csvfile, delimiter=",")
	counter = 0
	for row in plots:
		if labels == None:
			labels = row
		else:
			if counter % args.datapoint_counter == 0:
				x.append(float(row[0]))
				y1.append(float(row[y1_index]))
				y2.append(float(row[y2_index]))
				
			sum1 += float(row[y1_index])
			sum2 += float(row[y2_index])
			counter += 1

avg_train = "{:5.2f}".format(100*sum1/len(y1))
avg_test = "{:5.2f}".format(100*sum2/len(y2))
avg = "{:5.2f}".format(100*(sum1+sum2)/(len(y1)+len(y2)))

stats = "Average train " + args.to_plot + ": " + avg_train + "%\n"
stats += "Average test " + args.to_plot + ": " + avg_test + "%\n"
stats += "Average overall " + args.to_plot + ": " + avg + "%"

print(stats)

plt.plot(x, y1)
plt.plot(x, y2)
plt.xlabel("Epoch")
if args.to_plot == "accuracy":
	plt.ylabel("Accuracy")
else:
	plt.ylabel("Loss")
plt.title(args.title)
plt.legend(["Train", "Test"], loc="upper left")
plt.show()